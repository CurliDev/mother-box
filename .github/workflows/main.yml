name: CI/CD for HubNode-Box

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/*.md"

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
# jobs:
#   build-and-deploy:
#     runs-on: self-hosted
#     strategy:
#       matrix:
#         node-version: [18.x] # Using Node.js version 18

#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2

#     - name: Setup Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'

#     - name: Install Dependencies
#       run: |
#         echo "Installing dependencies..."
#         npm ci
#       env:
#         CI: true

#     - name: Build
#       run: |
#         echo "Building the Next.js application...."
#         npm run build

#     - name: Deploy to Production
#       env:
#         SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
#       run: |
#         # Start the SSH Agent
#         eval "$(ssh-agent -s)"

#         # Add the SSH Key to the SSH Agent
#         echo "$SSH_KEY" | ssh-add -

#         # Transfer build directory to the EC2 instance
#         scp -o StrictHostKeyChecking=no -r .next/* ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }}:${{ secrets.TARGET_DIR }}

#         # Install production dependencies and restart the application
#         ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }} << 'ENDSSH'
#           cd ${{ secrets.TARGET_DIR }}
#           npm install --production
#           pm2 restart all # or the specific command to start your application
#         ENDSSH

